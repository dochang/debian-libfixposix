/*******************************************************************************/
/* Permission is hereby granted, free of charge, to any person or organization */
/* obtaining a copy of the software and accompanying documentation covered by  */
/* this license (the "Software") to use, reproduce, display, distribute,       */
/* execute, and transmit the Software, and to prepare derivative works of the  */
/* Software, and to permit third-parties to whom the Software is furnished to  */
/* do so, all subject to the following:                                        */
/*                                                                             */
/* The copyright notices in the Software and this entire statement, including  */
/* the above license grant, this restriction and the following disclaimer,     */
/* must be included in all copies of the Software, in whole or in part, and    */
/* all derivative works of the Software, unless such copies or derivative      */
/* works are solely in the form of machine-executable object code generated by */
/* a source language processor.                                                */
/*                                                                             */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  */
/* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    */
/* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT   */
/* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE   */
/* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, */
/* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER */
/* DEALINGS IN THE SOFTWARE.                                                   */
/*******************************************************************************/

#if !defined(_LFP_STRING_H_)
# define _LFP_STRING_H_

#include <lfp/aux.h>

LFP_BEGIN_DECLS

#include <sys/types.h>
#include <string.h>

#include <lfp/strerror.h>

size_t lfp_strnlen(const char *s, size_t maxlen);

char* lfp_strndup(const char *s, size_t maxlen);

enum lfp_memsize_measure_unit {
    LFP_OCTETS = 0,
    LFP_KB,
    LFP_KIB,
    LFP_MB,
    LFP_MIB,
    LFP_GB,
    LFP_GIB,
    LFP_TB,
    LFP_TIB,
    LFP_PB,
    LFP_PIB,
    LFP_EB,
    LFP_EIB
};

ssize_t lfp_parse_memsize(const char *s, enum lfp_memsize_measure_unit default_unit);

LFP_END_DECLS

#endif /* _LFP_STRING_H_ */
